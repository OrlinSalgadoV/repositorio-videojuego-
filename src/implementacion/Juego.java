package implementacion;

import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.HashMap;

import javax.swing.JOptionPane;

import clases.Ataque;
import clases.AtaqueEnemigoFinal;
import clases.AtaqueEnemigoGeneral;
import clases.AtaqueEnemigoLibro;
import clases.AtaqueJugador;
import clases.Enemigo;
import clases.EnemigoFinal;
import clases.EnemigoGeneral;
import clases.EnemigoLibro;
import clases.Fondo;
import clases.Item;
import clases.JugadorAnimado;
import clases.Obstaculo;
import clases.Puntuacion;
import clases.Tile;
import clases.Tile2;
//import clases.Tile3;
import javafx.animation.AnimationTimer;
import javafx.application.Application;
import javafx.event.EventHandler;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.image.Image;
import javafx.scene.input.KeyEvent;
import javafx.scene.paint.Color;
import javafx.stage.Stage;

public class Juego extends Application{
	private GraphicsContext graficos;
	private Group root;
	private Scene escena;
	private Canvas lienzo;
	private int x=0;
	private int y=0;
	private JugadorAnimado jugadorAnimado;
	private Enemigo enemigo;
	private Ataque ataque;
	private EnemigoGeneral enemigoGeneral;
	private AtaqueJugador ataqueJugador;
	private EnemigoLibro enemigoLibro;
	private Fondo fondo;
	public static boolean arriba;
	public static boolean abajo;
	public static boolean izquierda;
	public static boolean derecha;
	public static boolean espacio;
	public static boolean teclaX;
	public static boolean teclaEnter;
	public static int segundos;
	public static double copiat;
	public static HashMap<String, Image>imagenes;
	private ArrayList<Tile>tiles;
	private ArrayList<Tile2>tiles2;
	private ArrayList<Tile2>tiles3;
	private ArrayList<Item>items;
	private ArrayList<Obstaculo>obstaculos;
	private ArrayList<EnemigoGeneral>enemigosGenerales;
	public static ArrayList<Puntuacion>puntuaciones;
	private int cont=0;
	private ArrayList<AtaqueEnemigoFinal>ataquesFinales;
	private EnemigoFinal enemigoFinal;
	
	public static String nombre;
	
	private int tilemap[][] = { 
			
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,36,1,1,1,1,1,1,1,36,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,37,1,1,1,1,1,1,1,1,1,37,1,1,38,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,39,40,41,1,39,40,41,1,39,40,41,1,39,40,41,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,4,5,5,5,5,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,42,43,44,1,42,43,44,1,42,43,44,1,42,43,44,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,7,8,8,8,8,9,1,1,1,2,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,50,1,1,1,50,1,1,1,50,1,1,1,50,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,37,1,1,1,1,1,1,1,1,1,1,1,1,10,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,37,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,38,1,1,1,1,1,1,1,1,1,2,3,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,37,1,1,1,1,1,35,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,38,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,37,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,37,1,1,1,1,1,1,1,1,1,1,1,1,1,1,36,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,37,1,1,1,1,1,1,1,1,1,10,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,35,1,36,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,4,5,5,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{4,18,18,18,18,18,6,1,1,37,1,1,1,10,4,18,18,18,6,1,4,6,1,1,1,4,18,18,18,6,  1,1,11,34,34,12,1,1,1,1,36,1,36,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{11,34,34,34,34,34,12,1,1,1,1,1,10,1,11,34,34,34,12,1,7,9,1,1,1,11,34,34,34,12,  1,1,11,34,34,12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{7,17,17,17,17,17,9,1,1,1,1,2,3,1,7,17,17,17,9,1,1,1,2,3,1,7,17,17,17,9,  1,1,7,8,8,9,2,3,1,1,1,1,1,1,38,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,2,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,36,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,10,1,1,1,1,1,1,37,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,21,1,1,1,1,1,1,1,1,37,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,38,1,1,1,1,1,4,5,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,37,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,7,8,9,1,1,1,1,1,1,1,38,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,37,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,37,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,36,1,1,4,5,5,6,1,1,1,1,37,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,37,1,1,1,1,1,1,11,13,14,12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,11,15,16,12,1,1,1,1,1,1,36,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,7,17,17,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
			
	};
	
	private int tilemap2[][] = { 
			{1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,32,31,30,36,37,0,0,0,3,  3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,  24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,  2,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,49,  26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,31,30,36,37,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,  26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,31,30,36,37,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,  28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,31,30,36,37,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,31,35,29,22,  23,16,17,22,23,22,23,22,23,22,23,22,23,22,37,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,34,30,24,  25,16,17,24,25,24,25,24,25,24,25,24,25,24,36,37,0,0,0,0,0,0,2,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,4,5,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,31,26,  27,16,17,26,27,26,27,26,27,26,27,26,27,26,30,36,37,0,0,0,0,0,0,2,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,8,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,28,  28,16,17,28,28,28,28,28,28,28,28,28,28,28,31,30,36,37,0,0,0,0,3,0,0,0,45,22,23,22,  2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,8,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,31,30,36,37,0,0,0,0,0,0,45,21,24,25,24,  0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,10,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,31,30,36,37,0,0,0,0,45,21,39,26,27,26,  0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,12,16,17,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,31,30,36,37,0,0,45,21,39,40,47,28,47,  0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,14,16,17,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,31,30,36,22,23,21,39,40,41,44,0,0,  0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,  50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,31,30,24,25,39,40,41,44,0,0,0,  0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,  0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,31,26,27,40,41,44,0,0,0,0,  2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,28,28,41,44,0,2,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,  0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,49,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  22,23,22,23,22,23,22,23,16,18,18,17,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  24,25,24,25,24,25,24,25,16,18,18,17,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,  0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  26,27,26,27,26,27,26,27,16,18,18,17,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,  49,48,48,48,48,48,48,48,48,48,48,2,0,0,0,0,2,48,48,48,48,48,48,48,48,48,48,48,48,48,  48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,48,48,48,48,48,48,48,48,48,48,48,49,  28,28,28,28,28,28,28,28,16,18,18,17,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28},
			
			{50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,48,48,48,48,48,48,48,0,0,0,0,48,48,48,48,48,48,48,48,49,56,0,0,0,0,0,0,0,49},
			{0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,49},
			{0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,49},
			{0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,0,0,49,  22,23,22,23,22,23,22,23,16,17,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,49,57,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,49,0,49,  24,25,24,25,24,25,24,25,16,17,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,24,25,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,49,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,0,0,2,  26,27,26,27,26,27,26,27,16,17,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,48,48,48,0,48,48,48,49},
			{0,0,0,0,49,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,  28,28,28,28,28,28,28,28,16,17,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,49,0,0,0,0,0,0,0,0,49,48,48,48,48,48,0,0,0,0,0,48,48,48,48,48,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,4,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,7,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,49,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,49,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,49,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,10,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,11,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,48,0,48,48,48,48,48,49},
			{0,0,0,0,50,0,0,0,0,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,12,29,22,23,22,23,22,23,22,23,16,17,22,23,22,23,22,23,21,13,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,57,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,50,0,0,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,48,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,14,35,24,25,24,25,24,25,24,25,16,17,24,25,24,25,24,25,58,15,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,48,48,0,48,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,33,31,26,27,26,27,26,27,26,27,16,17,26,27,26,27,26,27,40,41,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,32,46,28,46,28,46,28,46,28,16,17,46,28,46,28,46,28,41,44,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,49},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,  49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,49},
			{5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,7,49,48,48,48,49,  49,48,48,48,48,2,2,2,48,48,48,48,2,48,48,2,2,48,48,2,48,48,48,48,2,2,2,2,2,2,  4,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,7,  48,48,2,2,2,2,2,2,48,48,48,48,48,48,48,48,48,2,3,2,2,3,2,48,48,48,48,48,48,48,  2,2,2,2,2,2,48,48,2,3,2,3,48,48,48,48,48,48,2,2,2,2,48,48,48,48,48,48,48,48}
					
	};
	private int tilemap3[][] = { 
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
				
	};

	public static void main(String[] args) {
		String cadena = "";
		puntuaciones = new ArrayList<Puntuacion>();
		try {
			ObjectInputStream flujoEntrada = new ObjectInputStream(new FileInputStream("puntuaciones.data"));
			while(true) {
				puntuaciones.add((Puntuacion)flujoEntrada.readObject());
			}
		}catch(EOFException e) {
				System.out.println("fin del archivo");
				
		} catch (IOException | ClassNotFoundException e) {
			//e.printStackTrace();
			System.out.println("error al leer");
		}
		 nombre = JOptionPane.showInputDialog(null, "Ingrese su nombre"); 
		 for(int i=0;i<puntuaciones.size();i++)
			 cadena+=puntuaciones.get(i)+"\n";
		 JOptionPane.showMessageDialog(null, cadena);
		 launch(args);
		

	}

	@Override
	public void start(Stage ventana) throws Exception {
		inicializarComponentes();
		gestionEventos();
		
		ventana.setScene(escena);
		ventana.setTitle("Wind Protector");
		ventana.show();
		
		cicloJuego(ventana);
	}
	public void cicloJuego(Stage ventana) {
		long tiempoInicial=System.nanoTime();
		AnimationTimer animationTimer=new AnimationTimer() {

			@Override
			public void handle(long tiempoActual) {
			 double t=(tiempoActual-tiempoInicial)/1000000000.0;
			// System.out.println(t);
			 
			 actualizarEstado(t, ventana);
			 pintar();
			}
			
		};
		animationTimer.start();
	}
	public void actualizarEstado(double t, Stage ventana) {
		if(jugadorAnimado.getVidas()>0 && enemigoFinal.getVidas()>0) {
		segundos=(int)t;
		copiat=t;
		//jugador.mover();
		jugadorAnimado.verificarColisiones( enemigo,t,ataque,ataqueJugador,items,tiles2,obstaculos,enemigosGenerales,enemigoLibro,enemigoFinal);
		jugadorAnimado.calcularFrame(t);
		enemigo.calculaFrame(t);
		ataque.calcularFrame(t);
		for(int i=0;i<obstaculos.size();i++ )
			obstaculos.get(i).calcularFrame(t);
		ataqueJugador.calcularFrame(t);
		jugadorAnimado.mover();
		enemigo.mover();
		ataque.mover();
		for(int i=0;i<enemigosGenerales.size();i++) {
		enemigosGenerales.get(i).mover();
		enemigosGenerales.get(i).calculaFrame(t);
		}
		enemigoLibro.calculaFrame(t);
		enemigoLibro.mover();
		enemigoFinal.calculaFrame(t);
		enemigoFinal.mover();
		ataqueJugador.mover();
		//gestionarUbicaciones();
		jugadorAnimado.choques(enemigoLibro, enemigoFinal);
		fondo.mover();
		
		for(int i=0;i<tiles.size();i++)
			tiles.get(i).mover();
		for(int i=0;i<tiles2.size();i++)
			tiles2.get(i).mover();
		for(int i=0;i<tiles3.size();i++)
			tiles3.get(i).mover();
		for(int i=0;i<items.size();i++)
			items.get(i).mover();
		for(int i=0;i<obstaculos.size();i++)
			obstaculos.get(i).mover();
		}
		else {
			if(cont<1 && JugadorAnimado.puntos>0) {
			
			puntuaciones.add(new Puntuacion(nombre,JugadorAnimado.puntos));
			try {
				ObjectOutputStream flujoSalida= new ObjectOutputStream(new FileOutputStream("puntuaciones.data"));
				for(int i=0;i<puntuaciones.size();i++) 
					flujoSalida.writeObject(puntuaciones.get(i));
				flujoSalida.close();
			} catch (IOException e) {
				System.out.println("error al guardar");
				//e.printStackTrace();
			}
			}
			cont++;
			if(teclaEnter)
				ventana.close();
			
		 }
	}
	public void inicializarComponentes() {
		imagenes= new HashMap<String, Image>();
		cargarImagenes();
		//jugador = new Jugador(0, 0, "boreas1",5, 0);
		jugadorAnimado = new JugadorAnimado(6, 200, "boreas",2, 250,"descanso",5);
		
		enemigo= new Enemigo(750,700,"dragon",2,"caminar",300);
		ataque= new Ataque(enemigo.getX(),enemigo.getY(),"fuego",3,"fuego");
		ataqueJugador= new AtaqueJugador(JugadorAnimado.coordenadaX, JugadorAnimado.cooordenadaY, "fuego",3,"fuego");
		fondo = new Fondo(0 ,0 ,"fondograma","fondograma2",1);
		inicializarTiles();
		inicializarTiles2();
		inicializarTiles3();
		//item= new Item(400,200,"item",0,1,1);
		inicializarItems();
		inicializarObstaculos();
		inicializarEnemigosGenerales();
		inicializarAtaquesEnemigoFinal();
		enemigoLibro = new EnemigoLibro(2050,220,"enemigoLibro",0,"posedescanso",125,new AtaqueEnemigoLibro(2000,220,"enemigoLibro",10,"ataque1",1),1,600);
		enemigoFinal = new EnemigoFinal(3550,230,"enemigoFinal",5,"descanso",175, new AtaqueEnemigoFinal(3490,230,"enemigoFinal",8,"ataque3",3),ataquesFinales,1,700,25);
		//tile= new Tile(0,0,"tilemap1",0,94,94,50,50);
		root = new Group();
		lienzo = new Canvas(720, 504);
		root.getChildren().add(lienzo);
		graficos = lienzo.getGraphicsContext2D();
		escena = new Scene(root, 720, 504);
	}
	public void inicializarTiles() {
		 
		tiles = new ArrayList<Tile>();
		for(int i=0; i<tilemap.length;i++) {
			for(int j=0; j<tilemap[i].length;j++) {
				if(tilemap[i][j]!=0)
					this.tiles.add(new Tile(tilemap[i][j], (j*24), (i*24),"tilemap1", 3, 48, 48));	
			}
		}
	}
	public void inicializarTiles2() {
		tiles2 = new ArrayList<Tile2>();
		for(int i=0; i<tilemap2.length;i++) {
			for(int j=0; j<tilemap2[i].length;j++) {
				if(tilemap2[i][j]!=0)
					this.tiles2.add(new Tile2(tilemap2[i][j], (j*24)-(tilemap2[i][j]==44?1:0), (i*24)-(tilemap2[i][j]==1?180:0),"tilemap1", 3));
		
			}
		}
	}
	public void inicializarTiles3() {
		tiles3 = new ArrayList<Tile2>();
		for(int i=0; i<tilemap3.length;i++) {
			for(int j=0; j<tilemap3[i].length;j++) {
				if(tilemap3[i][j]!=0)
					this.tiles3.add(new Tile2(tilemap3[i][j], (j*24), (i*24),"tilemap1", 3));
		
			}
		}
	}
	public void inicializarItems() {
		items= new ArrayList<Item>();
		this.items.add(new Item(500,320,"gemas",0,1,15));
		this.items.add(new Item(205,160,"items",0,1,3));
		this.items.add(new Item(1230,230,"items",0,1,2));
		this.items.add(new Item(600,230,"gemas",0,1,6));
		this.items.add(new Item(300,100,"gemas",0,1,15));
		this.items.add(new Item(70,400,"gemas",0,1,10));
		this.items.add(new Item(670,20,"gemas",0,1,17));
		this.items.add(new Item(20,700,"gemas",0,1,20));
		this.items.add(new Item(450,640,"gemas",0,1,21));
		this.items.add(new Item(580,640,"gemas",0,1,14));
		this.items.add(new Item(350,950,"gemas",0,1,9));
		this.items.add(new Item(1205,450,"gemas",0,1,25));
		this.items.add(new Item(1036,475,"gemas",0,1,12));
		this.items.add(new Item(780,420,"gemas",0,1,11));
		this.items.add(new Item(1000,200,"gemas",0,1,9));
		this.items.add(new Item(1342,10,"gemas",0,1,12));
		this.items.add(new Item(1342,50,"gemas",0,1,20));
		this.items.add(new Item(1342,90,"gemas",0,1,24));
		this.items.add(new Item(2070,900,"gemas",0,1,22));
		this.items.add(new Item(2050,750,"gemas",0,1,16));
		this.items.add(new Item(1800,770,"gemas",0,1,19));
		this.items.add(new Item(1600,850,"gemas",0,1,21));
		this.items.add(new Item(1936,554,"gemas",0,1,17));
		this.items.add(new Item(2230,456,"gemas",0,1,10));
		this.items.add(new Item(2230,426,"gemas",0,1,19));
		this.items.add(new Item(2814,456,"gemas",0,1,13));
		
		this.items.add(new Item(2680,550,"gemas",0,1,25));
		this.items.add(new Item(2580,600,"gemas",0,1,16));
		this.items.add(new Item(2414,990,"gemas",0,1,20));
		
		this.items.add(new Item(3420,700,"gemas",0,1,12));
		this.items.add(new Item(3220,520,"gemas",0,1,9));
		this.items.add(new Item(3000,600,"gemas",0,1,24));
		
		this.items.add(new Item(725,15,"items",0,1,1));
		this.items.add(new Item(336,744,"items",0,1,1));
		this.items.add(new Item(2100,784,"items",0,1,4));
		this.items.add(new Item(2300,730,"items",0,1,5));
		this.items.add(new Item(2000,856,"items",0,1,1));
		this.items.add(new Item(2814,426,"items",0,1,1));
		this.items.add(new Item(2780,756,"items",0,1,1));
		this.items.add(new Item(3520,700,"items",0,1,1));
		
	}
	public void inicializarObstaculos() {
		obstaculos= new ArrayList<Obstaculo>();
		this.obstaculos.add(new Obstaculo(808,180,"obstaculos",0,"puas",0));
		//this.obstaculos.add(new Obstaculo(745,170,"obstaculos",0,"cajaEstatica",20));
		this.obstaculos.add(new Obstaculo(765,170,"obstaculos",0,"cajaEstatica",20));
		this.obstaculos.add(new Obstaculo(700,10,"obstaculos",0,"cajaEstatica",20));
		this.obstaculos.add(new Obstaculo(700,40,"obstaculos",0,"cajaEstatica",20));
		this.obstaculos.add(new Obstaculo(980,410,"obstaculos",0,"cajaEstatica",20));
		this.obstaculos.add(new Obstaculo(980,440,"obstaculos",0,"cajaEstatica",20));
		this.obstaculos.add(new Obstaculo(980,470,"obstaculos",0,"cajaEstatica",20));
		this.obstaculos.add(new Obstaculo(1010,410,"obstaculos",0,"cajaEstatica",20));
		this.obstaculos.add(new Obstaculo(1040,410,"obstaculos",0,"cajaEstatica",20));
		this.obstaculos.add(new Obstaculo(1070,410,"obstaculos",0,"cajaEstatica",20));
		this.obstaculos.add(new Obstaculo(1100,410,"obstaculos",0,"cajaEstatica",20));
		this.obstaculos.add(new Obstaculo(1100,440,"obstaculos",0,"cajaEstatica",20));
		this.obstaculos.add(new Obstaculo(1100,470,"obstaculos",0,"cajaEstatica",20));
		
		this.obstaculos.add(new Obstaculo(1370,0,"obstaculos",0,"cajaEstatica",30));
		this.obstaculos.add(new Obstaculo(1370,40,"obstaculos",0,"cajaEstatica",30));
		this.obstaculos.add(new Obstaculo(1370,80,"obstaculos",0,"cajaEstatica",30));
		this.obstaculos.add(new Obstaculo(1370,120,"obstaculos",0,"cajaEstatica",30));
		this.obstaculos.add(new Obstaculo(1322,0,"obstaculos",0,"cajaEstatica",30));
		this.obstaculos.add(new Obstaculo(1322,40,"obstaculos",0,"cajaEstatica",30));
		this.obstaculos.add(new Obstaculo(1322,80,"obstaculos",0,"cajaEstatica",30));
		this.obstaculos.add(new Obstaculo(1322,120,"obstaculos",0,"cajaEstatica",30));
		this.obstaculos.add(new Obstaculo(2784,456,"obstaculos",0,"cajaEstatica",35));
		this.obstaculos.add(new Obstaculo(2784,416,"obstaculos",0,"cajaEstatica",35));
		this.obstaculos.add(new Obstaculo(2784,376,"obstaculos",0,"cajaEstatica",35));
		this.obstaculos.add(new Obstaculo(2814,376,"obstaculos",0,"cajaEstatica",35));
		this.obstaculos.add(new Obstaculo(2844,376,"obstaculos",0,"cajaEstatica",35));
		this.obstaculos.add(new Obstaculo(2208,376,"obstaculos",0,"cajaEstatica",35));
		this.obstaculos.add(new Obstaculo(2238,376,"obstaculos",0,"cajaEstatica",35));
		this.obstaculos.add(new Obstaculo(2268,376,"obstaculos",0,"cajaEstatica",35));
		this.obstaculos.add(new Obstaculo(2268,416,"obstaculos",0,"cajaEstatica",35));
		this.obstaculos.add(new Obstaculo(2268,456,"obstaculos",0,"cajaEstatica",35));
		this.obstaculos.add(new Obstaculo(2350,750,"obstaculos",0,"cajaEstatica",45));
		this.obstaculos.add(new Obstaculo(2380,750,"obstaculos",0,"cajaEstatica",45));
		this.obstaculos.add(new Obstaculo(2350,710,"obstaculos",0,"cajaEstatica",45));
		this.obstaculos.add(new Obstaculo(2380,710,"obstaculos",0,"cajaEstatica",45));
		
		//this.obstaculos.add(new Obstaculo(1324,144,"obstaculos",0,"puas",0));
		
	}
	public void inicializarEnemigosGenerales() {
		enemigosGenerales = new ArrayList<EnemigoGeneral>();
		enemigosGenerales.add(new EnemigoGeneral(1250,400,"dragongeneral",0,"ataque1",20,new AtaqueEnemigoGeneral(1250,410,"dragongeneral",5,"ataque1",1),1,400));
		enemigosGenerales.add(new EnemigoGeneral(850,-50,"dragongeneral",0,"ataque1",20,new AtaqueEnemigoGeneral(850,-40,"dragongeneral",5,"ataque1",2),2,400));
		enemigosGenerales.add(new EnemigoGeneral(1000,-50,"dragongeneral",0,"ataque1",20,new AtaqueEnemigoGeneral(1000,-40,"dragongeneral",5,"ataque1",2),2,400));
		enemigosGenerales.add(new EnemigoGeneral(1150,-50,"dragongeneral",0,"ataque1",20,new AtaqueEnemigoGeneral(1150,-40,"dragongeneral",5,"ataque1",2),2,400));
		enemigosGenerales.add(new EnemigoGeneral(1300,-50,"dragongeneral",0,"ataque1",20,new AtaqueEnemigoGeneral(1300,-40,"dragongeneral",5,"ataque1",2),2,400));
		enemigosGenerales.add(new EnemigoGeneral(620,610,"dragongeneral",0,"ataque1",20,new AtaqueEnemigoGeneral(620,615,"dragongeneral",5,"ataque1",2),2,400));
		enemigosGenerales.add(new EnemigoGeneral(370,610,"dragongeneral",0,"ataque1",20,new AtaqueEnemigoGeneral(370,615,"dragongeneral",5,"ataque1",2),2,400));
		enemigosGenerales.add(new EnemigoGeneral(24,760,"dragongeneral",0,"ataque1",20,new AtaqueEnemigoGeneral(24,765,"dragongeneral",5,"ataque1",2),2,400));
		enemigosGenerales.add(new EnemigoGeneral(620,850,"dragongeneral",0,"ataque1",20,new AtaqueEnemigoGeneral(620,855,"dragongeneral",6,"ataque1",1),1,650));
		enemigosGenerales.add(new EnemigoGeneral(620,950,"dragongeneral",0,"ataque1",20,new AtaqueEnemigoGeneral(620,955,"dragongeneral",6,"ataque1",1),1,650));
		enemigosGenerales.add(new EnemigoGeneral(1972,514,"dragongeneral",0,"ataque1",30,new AtaqueEnemigoGeneral(1977,519,"dragongeneral",8,"ataque1",2),2,500));
		enemigosGenerales.add(new EnemigoGeneral(1872,514,"dragongeneral",0,"ataque1",30,new AtaqueEnemigoGeneral(1877,519,"dragongeneral",8,"ataque1",2),2,500));
		enemigosGenerales.add(new EnemigoGeneral(1772,514,"dragongeneral",0,"ataque1",30,new AtaqueEnemigoGeneral(1777,519,"dragongeneral",8,"ataque1",2),2,500));
		enemigosGenerales.add(new EnemigoGeneral(1520,514,"dragongeneral",0,"ataque1",30,new AtaqueEnemigoGeneral(1525,519,"dragongeneral",8,"ataque1",2),2,500));
		enemigosGenerales.add(new EnemigoGeneral(2070,514,"dragongeneral",0,"ataque1",30,new AtaqueEnemigoGeneral(2070,519,"dragongeneral",8,"ataque1",1),1,600));
		enemigosGenerales.add(new EnemigoGeneral(2070,702,"dragongeneral",0,"ataque1",30,new AtaqueEnemigoGeneral(2070,707,"dragongeneral",8,"ataque1",1),1,600));
		enemigosGenerales.add(new EnemigoGeneral(2070,822,"dragongeneral",0,"ataque1",30,new AtaqueEnemigoGeneral(2070,827,"dragongeneral",8,"ataque1",1),1,600));
		enemigosGenerales.add(new EnemigoGeneral(2070,944,"dragongeneral",0,"ataque1",30,new AtaqueEnemigoGeneral(2070,949,"dragongeneral",8,"ataque1",1),1,600));
		enemigosGenerales.add(new EnemigoGeneral(2650,710,"dragongeneral",0,"ataque1",40,new AtaqueEnemigoGeneral(2650,715,"dragongeneral",8,"ataque1",1),1,600));
		enemigosGenerales.add(new EnemigoGeneral(2780,514,"dragongeneral",0,"ataque1",40,new AtaqueEnemigoGeneral(2780,519,"dragongeneral",8,"ataque1",1),1,600));
		enemigosGenerales.add(new EnemigoGeneral(2780,634,"dragongeneral",0,"ataque1",40,new AtaqueEnemigoGeneral(2780,639,"dragongeneral",8,"ataque1",1),1,600));
		enemigosGenerales.add(new EnemigoGeneral(2780,908,"dragongeneral",0,"ataque1",40,new AtaqueEnemigoGeneral(2780,913,"dragongeneral",8,"ataque1",1),1,600));
		enemigosGenerales.add(new EnemigoGeneral(3300,908,"dragongeneral",0,"ataque1",40,new AtaqueEnemigoGeneral(3300,913,"dragongeneral",8,"ataque1",1),1,400));
		enemigosGenerales.add(new EnemigoGeneral(3300,788,"dragongeneral",0,"ataque1",40,new AtaqueEnemigoGeneral(3300,793,"dragongeneral",8,"ataque1",1),1,400));
		enemigosGenerales.add(new EnemigoGeneral(3300,668,"dragongeneral",0,"ataque1",40,new AtaqueEnemigoGeneral(3300,673,"dragongeneral",8,"ataque1",1),1,400));
		enemigosGenerales.add(new EnemigoGeneral(3300,548,"dragongeneral",0,"ataque1",40,new AtaqueEnemigoGeneral(3300,553,"dragongeneral",8,"ataque1",1),1,400));
		enemigosGenerales.add(new EnemigoGeneral(2690,426,"dragongeneral",0,"ataque1",35,new AtaqueEnemigoGeneral(2690,431,"dragongeneral",8,"ataque1",1),1,500));
		enemigosGenerales.add(new EnemigoGeneral(2790,306,"dragongeneral",0,"ataque1",35,new AtaqueEnemigoGeneral(2790,311,"dragongeneral",8,"ataque1",1),1,600));
		enemigosGenerales.add(new EnemigoGeneral(2790,186,"dragongeneral",0,"ataque1",35,new AtaqueEnemigoGeneral(2790,191,"dragongeneral",8,"ataque1",1),1,600));
		enemigosGenerales.add(new EnemigoGeneral(2700,100,"dragongeneral",0,"ataque1",35,new AtaqueEnemigoGeneral(2700,105,"dragongeneral",8,"ataque1",2),2,370));
		enemigosGenerales.add(new EnemigoGeneral(2600,100,"dragongeneral",0,"ataque1",35,new AtaqueEnemigoGeneral(2600,105,"dragongeneral",8,"ataque1",2),2,370));
		enemigosGenerales.add(new EnemigoGeneral(2500,100,"dragongeneral",0,"ataque1",35,new AtaqueEnemigoGeneral(2500,105,"dragongeneral",8,"ataque1",2),2,370));
		enemigosGenerales.add(new EnemigoGeneral(2400,100,"dragongeneral",0,"ataque1",35,new AtaqueEnemigoGeneral(2400,105,"dragongeneral",8,"ataque1",2),2,370));
		enemigosGenerales.add(new EnemigoGeneral(2300,100,"dragongeneral",0,"ataque1",35,new AtaqueEnemigoGeneral(2300,105,"dragongeneral",8,"ataque1",2),2,370));
		enemigosGenerales.add(new EnemigoGeneral(2200,100,"dragongeneral",0,"ataque1",35,new AtaqueEnemigoGeneral(2200,105,"dragongeneral",8,"ataque1",2),2,370));
		enemigosGenerales.add(new EnemigoGeneral(3200,548,"dragongeneral",0,"ataque1",40,new AtaqueEnemigoGeneral(3200,553,"dragongeneral",8,"ataque1",2),2,450));
		enemigosGenerales.add(new EnemigoGeneral(3100,548,"dragongeneral",0,"ataque1",40,new AtaqueEnemigoGeneral(3100,553,"dragongeneral",8,"ataque1",2),2,450));
		enemigosGenerales.add(new EnemigoGeneral(3000,548,"dragongeneral",0,"ataque1",40,new AtaqueEnemigoGeneral(3000,553,"dragongeneral",8,"ataque1",2),2,450));
		enemigosGenerales.add(new EnemigoGeneral(2900,548,"dragongeneral",0,"ataque1",40,new AtaqueEnemigoGeneral(2900,553,"dragongeneral",8,"ataque1",2),2,450));
	}
	
	public void inicializarAtaquesEnemigoFinal() {
		ataquesFinales= new ArrayList<AtaqueEnemigoFinal>();
		ataquesFinales.add(new AtaqueEnemigoFinal(3600,0,"enemigoFinal",8,"ataque1",1));
		ataquesFinales.add(new AtaqueEnemigoFinal(3600,125,"enemigoFinal",8,"ataque1",1));
		ataquesFinales.add(new AtaqueEnemigoFinal(3600,250,"enemigoFinal",8,"ataque1",1));
		ataquesFinales.add(new AtaqueEnemigoFinal(3600,375,"enemigoFinal",8,"ataque1",1));
		ataquesFinales.add(new AtaqueEnemigoFinal(3600,500,"enemigoFinal",8,"ataque1",1));
		//ataquesFinales.add(new AtaqueEnemigoFinal(3480,500,"enemigoFinal",8,"ataque1",1));
		
		ataquesFinales.add(new AtaqueEnemigoFinal(3800,0,"enemigoFinal",8,"ataque1",4));
		ataquesFinales.add(new AtaqueEnemigoFinal(3800,125,"enemigoFinal",8,"ataque1",4));
		ataquesFinales.add(new AtaqueEnemigoFinal(3800,250,"enemigoFinal",8,"ataque1",4));
		ataquesFinales.add(new AtaqueEnemigoFinal(3800,375,"enemigoFinal",8,"ataque1",4));
		ataquesFinales.add(new AtaqueEnemigoFinal(3800,500,"enemigoFinal",8,"ataque1",4));
		
		ataquesFinales.add(new AtaqueEnemigoFinal(2890,-80,"enemigoFinal",8,"ataque2",2));
		ataquesFinales.add(new AtaqueEnemigoFinal(3015,-80,"enemigoFinal",8,"ataque2",2));
		ataquesFinales.add(new AtaqueEnemigoFinal(3140,-80,"enemigoFinal",8,"ataque2",2));
		ataquesFinales.add(new AtaqueEnemigoFinal(3265,-80,"enemigoFinal",8,"ataque2",2));
		ataquesFinales.add(new AtaqueEnemigoFinal(3390,-80,"enemigoFinal",8,"ataque2",2));
		ataquesFinales.add(new AtaqueEnemigoFinal(3515,-80,"enemigoFinal",8,"ataque2",2));
		//ataquesFinales.add(new AtaqueEnemigoFinal(3420,-80,"enemigoFinal",8,"ataque2",2));
		//ataquesFinales.add(new AtaqueEnemigoFinal(3500,-80,"enemigoFinal",8,"ataque2",2));
		//ataquesFinales.add(new AtaqueEnemigoFinal(3580,-80,"enemigoFinal",8,"ataque2",2));
		
		ataquesFinales.add(new AtaqueEnemigoFinal(2890,-280,"enemigoFinal",8,"ataque2",5));
		ataquesFinales.add(new AtaqueEnemigoFinal(3015,-280,"enemigoFinal",8,"ataque2",5));
		ataquesFinales.add(new AtaqueEnemigoFinal(3140,-280,"enemigoFinal",8,"ataque2",5));
		ataquesFinales.add(new AtaqueEnemigoFinal(3265,-280,"enemigoFinal",8,"ataque2",5));
		ataquesFinales.add(new AtaqueEnemigoFinal(3390,-280,"enemigoFinal",8,"ataque2",5));
		ataquesFinales.add(new AtaqueEnemigoFinal(3515,-280,"enemigoFinal",8,"ataque2",5));
	}

	public void cargarImagenes() {
		imagenes.put("fondograma", new Image("fondograma.jpg"));
		imagenes.put("fondograma2", new Image("fondograma2.jpg"));
		imagenes.put("tilemap1", new Image("tilemap1.png"));
		imagenes.put("boreas", new Image("boreassprites.png"));
		imagenes.put("lvidas", new Image("lvidas.png"));
		imagenes.put("vida", new Image("vida.png"));
		imagenes.put("barravida", new Image("barravida.png"));
		imagenes.put("item", new Image("item2.png"));
		imagenes.put("dragon", new Image("dragon.png"));
		imagenes.put("fuego", new Image("fuego.png"));
		imagenes.put("items", new Image("items.png"));
		imagenes.put("instrucciones", new Image("imageninstrucciones.png"));
		imagenes.put("obstaculos", new Image("obstaculos.png"));
		imagenes.put("dragongeneral", new Image("dragongeneral.png"));
		imagenes.put("gemas", new Image("gemas.png"));
		imagenes.put("enemigoLibro", new Image("enemigolibro.png"));
		imagenes.put("gameover", new Image("gameover.png"));
		imagenes.put("enemigoFinal", new Image("enemigofinal.png"));
		imagenes.put("ganador", new Image("ganador.png"));
		
	}
	public void pintar() { 
		if(jugadorAnimado.getVidas()>0 && enemigoFinal.getVidas()>0) {
		fondo.pintar(graficos);
		for(int i=0;i<tiles.size();i++)
			tiles.get(i).pintar(graficos);
		for(int i=0;i<tiles2.size();i++)
			tiles2.get(i).pintar(graficos);
		for(int i=0;i<items.size();i++)
			items.get(i).pintar(graficos);
		for(int i=0;i<obstaculos.size();i++)
			obstaculos.get(i).pintar(graficos);
		for(int i=0;i<enemigosGenerales.size();i++)
			enemigosGenerales.get(i).pintar(graficos);
		jugadorAnimado.pintar(graficos);
		for(int i=0;i<tiles3.size();i++)
			tiles3.get(i).pintar(graficos);
		enemigo.pintar(graficos);
		for(int i=0;i<enemigosGenerales.size();i++)
		enemigosGenerales.get(i).pintar(graficos);
		
		enemigoLibro.pintar(graficos);
		enemigoFinal.pintar(graficos);
		
		ataque.pintar(graficos);
		ataqueJugador.pintar(graficos);
		
		graficos.setFill(Color.BLUE);
		graficos.fillText("Puntos: "+(int)JugadorAnimado.puntos, 600, 15);
		graficos.drawImage(imagenes.get("lvidas"),0,0);
		for(int i=0;i<(jugadorAnimado.getVidas());i++) 
			graficos.drawImage(imagenes.get("vida"),60+i*20,0);
		
		}
		else {
			if(jugadorAnimado.getVidas()<1) 
			graficos.drawImage(imagenes.get("gameover"), 0, 0);
			graficos.setFill(Color.RED);
			if(enemigoFinal.getVidas()<1)
				graficos.drawImage(imagenes.get("ganador"), 0, 0);
			graficos.fillText("nombre: "+ nombre +"  Puntuacion: "+(int)JugadorAnimado.puntos, 275, 310);
		}
	}
	
	public void gestionEventos() {
		escena.setOnKeyPressed(new EventHandler<KeyEvent>() {

			@Override
			public void handle(KeyEvent evento) {
				//System.out.println(evento.getCode().toString());
				switch(evento.getCode().toString()){
				case "RIGHT":
					derecha = true;
					break;
				case "LEFT":
					izquierda = true;
					break;
				case "UP":
					arriba = true;
					break;
				case "DOWN":
					abajo = true;
					break;
				case "SPACE":
					espacio=true;
					//jugador.setVelocidad(10);
					jugadorAnimado.setVelocidad(5);
				break;
				case "X":
					teclaX=true;
					//jugadorAnimado.setAnimacionActual("puno");
					
					break;
				case "ENTER":
					teclaEnter=true;
				break;
				}
				
			}
			
		});
		escena.setOnKeyReleased(new  EventHandler<KeyEvent>() {

			@Override
			public void handle(KeyEvent evento) {
				switch(evento.getCode().toString()){
				case "RIGHT":
					derecha = false;
					jugadorAnimado.setAnimacionActual("descanso");
					break;
				case "LEFT":
					izquierda = false;
					
					jugadorAnimado.setAnimacionActual("descanso2");
					break;
				case "UP":
					arriba = false;
					jugadorAnimado.setAnimacionActual("descanso");
					break;
				case "DOWN":
					jugadorAnimado.setAnimacionActual("descanso");
					abajo = false;
					break;
				case "SPACE":
					espacio= false;
					//jugador.setVelocidad(5);
					jugadorAnimado.setVelocidad(3);
					break;
					case "X":
						teclaX=false;
						//jugadorAnimado.setAnimacionActual("descanso");
					
					break;
					case "ENTER":
						teclaEnter=false;
					break;
				}
			}
			
		});
	}

}
